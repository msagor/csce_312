  
  
  .data 0x10008000		       	# data segment start (assembler directive)
B:.word 300			# B[0]
	.word 200			# B[1]
	.word 100			# B[2]
	.word 0				# B[3]
i:	.word 3
.text 				               	# code segment start (assembler directive)


main:	

la	$t1,	B		                # load the address of B[0] (&(B[0]) == B) into register $t1
lw	$t0,	0($t1)	          	        # load value of B[0] into register $t0


lw	$t2, 4($t1)
lw	$t3, 8($t1)
add $t4, $t0, $t2
add $t4, $t4, $t3
 
  
	
addi	$v0,	$0,	10	               # `exit MIPS program' syscall
syscall
  
  